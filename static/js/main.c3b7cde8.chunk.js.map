{"version":3,"sources":["Resume.js","App.js","serviceWorker.js","index.js","account.svg"],"names":["withRouter","location","console","log","state","id","info","data","profiles","className","src","prof","alt","style","width","height","basics","name","role","email","mobile","address","careerobjectve","Stength","map","item","skills","class","Qualification","index","institute","course","yop","per","hobbies","Home","history","margin","value","key","boxShadow","gender","profileIcon","S","fontStyle","href","onClick","e","preventDefault","push","viewProfile","App","exact","path","component","Resume","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.c3b7cde8.chunk.js","sourcesContent":["import React from 'react';\r\nimport data from './data.json';\r\nimport {withRouter} from 'react-router-dom';\r\nimport prof from './account.svg';\r\n\r\nlet Resume=({location})=>{\r\n    console.log(location.state && location.state.id)\r\n    let info=data.profiles[location.state && location.state.id];\r\n    return(\r\n        <div className=\"row mt-5 \">\r\n            {/*Left part*/}\r\n            <div className=\"col-lg-3 offset-lg-1 bg-light justify-content-center text-center pt-5\">\r\n                <div className=\"card shadow\">\r\n                    <div className=\"card-body p-2\">\r\n                        <img src={prof} alt=\"#\" style={{width: \"100px\", height: \"100px\"}}></img>\r\n                        <h2>{info.basics.name}</h2>\r\n                        <hr></hr>\r\n                        <h3>{info.basics.role}</h3>\r\n                        <h3>{info.basics.email}</h3>\r\n                        <h3>{info.basics.mobile}</h3>\r\n                        <h3>{info.basics.address}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        \r\n            <div className=\"col-lg-7 bg-light pt-5\">\r\n                <div className=\"card shadow\">\r\n                    <div className=\"card-body p-2\">\r\n                        <img src={prof} style={{width: \"100px\", height: \"100px\"}} alt=\"#\"></img>\r\n                        <hr></hr>\r\n                        <h3>Career Objective</h3>\r\n                        <p>{info.basics.careerobjectve}</p>\r\n                        <hr></hr>\r\n                        <h3>Strenths</h3>\r\n                        <ul>\r\n                            {info.basics.Stength.map(item => {\r\n                                return <li>{item}</li>\r\n                            })}\r\n                        </ul>\r\n                        <hr></hr>\r\n                        <h3>Skills</h3>\r\n                        <ul>\r\n                            {info.basics.skills.map(item => {\r\n                                return <li>{item}</li>\r\n                            })}\r\n                        </ul>\r\n                        <hr></hr>\r\n                        <h3>Qualification</h3>\r\n                        <table class=\"table table-striped table-sm table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>S.No</th>\r\n                                    <th>Institute</th>\r\n                                    <th>Course</th>\r\n                                    <th>YOP</th>\r\n                                    <th>Per</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {info.basics.Qualification.map((item, index) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>{index+1}</td>\r\n                                            <td>{item.institute}</td>\r\n                                            <td>{item.course}</td>\r\n                                            <td>{item.yop}</td>\r\n                                            <td>{item.per}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                        <hr></hr>\r\n                        <h3>Hobbies</h3>\r\n                        <ul>\r\n                            {info.basics.hobbies.map(item => {\r\n                                return <li>{item}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Resume);","import React from 'react';\nimport data from './data.json';\nimport profileIcon from './account.svg';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport Resume from './Resume.js';\n\nlet App=()=>{\n  \n  return(\n    \n      <BrowserRouter>\n        <div>\n        <Route exact path='/' component={Home} />\n        <Route exact path=\"/resume\" component={Resume} />\n        </div>\n      </BrowserRouter>\n  )\n}\nlet Home=({history})=>{\n  let profiles=data && data.profiles;\n\n  const viewProfile = (e, id) => {\n    e.preventDefault();\n    console.log(id)\n    history.push(\"resume\", {id})\n  }\n  return(\n    <div className=\"row justify-content-center justify-space-around mt-5\" style={{margin:\"0%auto\"}}>\n    {profiles.map((value,index)=>(\n      <div className=\"col-lg-3 col-md-4 col-sm-10 mt-1 ml-5\" key={index}>\n      {/* Card */}\n      <div className=\"card\" style={{boxShadow:\"0px 8px 8px -8px #000\"}}>\n          <div className=\"card-body text-center\">\n            {/* <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/> */}\n            {value.basics.gender===\"male\" ? <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/> : <img src={profileIcon}S alt=\"Profile icon\" style={{width:\"30%\"}}/>}\n            <h3> {value.basics.name} </h3>\n            <h5 className=\"text-secondary\" style={{fontStyle:\"italic\"}}> {value.basics.role}</h5> <hr />\n<a href={\"mailto:\"+value.basics.email}> {value.basics.email}</a> <br>\n            </br>\n  <a href={\"tel:\"+value.basics.mobile}> {value.basics.mobile}</a> <br />\n  <a href=\"#\" onClick={(e) => viewProfile(e, index)}>view resume</a>\n {/* <a className=\"btn btn-secondary text-white btn-block btn-sm\"> View profile</a> */}\n          </div>\n      </div>\n    </div>\n  ))}\n  </div>\n  )\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/account.c9fffa0e.svg\";"],"sourceRoot":""}